//file:noinspection all

plugins {
    id 'fabric-loom' version '1.0-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archives_base_name = project.archives_base_name
group = project.maven_group

version = System.env.GITHUB_ACTIONS == "true"
        ? "${project.mod_version}+build.${System.env.GITHUB_RUN_NUMBER}"
        : project.mod_version

static String terraformers() {
    def url = "https://maven.terraformersmc.com/"
    def conn = new URL(url).openConnection()
    conn.connect()
    url = conn.getResponseCode() == 521 ? "https://maven.kotlindiscord.com/repository/terraformers/" : url
    return url
}

repositories {
    maven {
        name = "Modrinth"
        url  = "https://api.modrinth.com/maven/"
    }
    maven {
        name = 'Shedaniel Maven'
        url "https://maven.shedaniel.me/"
    }
    maven {
        name = 'Curse Maven'
        url = "https://www.cursemaven.com"
    }
    maven {
        url = terraformers()
    }
    maven { url = "https://mvn.devos.one/releases/" }
    maven { url = "https://mvn.devos.one/snapshots/" }
    maven { url 'https://jitpack.io' }
}

dependencies {
    // Required //
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // Api's //
    modImplementation "curse.maven:farmers-delight-fabric-482834:${project.fd_version}"

    modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:${project.rei_version}"
    modCompileOnly "me.shedaniel:RoughlyEnoughItems-default-plugin-fabric:${project.rei_version}"

    modImplementation(include("io.github.fabricators_of_create:Porting-Lib:${project.forge_tags_version}"))

    modImplementation(include("curse.maven:forge-config-api-port-fabric-547434:${project.config_api_version}"))
    implementation 'com.electronwill.night-config:core:3.6.6'
    implementation 'com.electronwill.night-config:toml:3.6.6'

    implementation("com.github.LlamaLad7:MixinExtras:0.1.1")
    annotationProcessor("com.github.LlamaLad7:MixinExtras:0.1.1")

    implementation 'com.github.Chocohead:Fabric-ASM:v2.3'

    //implementation 'net.patchworkmc:event-racecar:1.0.1'
    modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:${project.rei_version}"
    modCompileOnly "me.shedaniel:RoughlyEnoughItems-default-plugin-fabric:$rei_version"

    // Runtime Utilites //
    modRuntimeOnly "com.terraformersmc:modmenu:${project.mod_menu_version}"
    //modRuntimeOnly "dev.emi:emi:${emi_version}"
    modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-fabric:$rei_version"

    implementation 'javax.annotation:javax.annotation-api:1.2'

}

loom {
    accessWidenerPath = file("src/main/resources/${project.mod_id}.accesswidener")

//    runs {
//        datagen {
//            server()
//
//            name "Minecraft Data"
//            vmArg "-Dfabric-api.datagen"
//            vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"
//
//            runDir "build/datagen"
//        }
//    }
}
//assemble.dependsOn runDatagen

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

sourceSets.main.resources {
    srcDirs += "$projectDir/src/generated/resources"
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archives_base_name}"}
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {}
}